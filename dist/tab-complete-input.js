(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("tab-complete-input", [], factory);
	else if(typeof exports === 'object')
		exports["tab-complete-input"] = factory();
	else
		root["tab-complete-input"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_triejs__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_triejs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_triejs__);\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"tab-complete-input\",\n  data: function data() {\n    return {\n      trie: {},\n      position: 0,\n      wordPos: 0,\n      index: 0,\n      words: [],\n      word: \"\",\n      dynamicData: false,\n      possible: false,\n      saved: false\n    };\n  },\n\n  created: function created() {\n    this.dynamicData = this.dataSource instanceof Function;\n\n    if (!this.dynamicData) {\n      this.setData(this.dataSource);\n    }\n  },\n  props: {\n    dataSource: {\n      default: []\n    },\n    format: {\n      default: function _default(val, prev, pos) {\n        return { word: val, prev: prev };\n      },\n      type: Function\n    },\n    value: {\n      default: \"\",\n      type: String\n    }\n  },\n  methods: {\n    setData: function setData(array) {\n      var _this = this;\n\n      this.trie = new __WEBPACK_IMPORTED_MODULE_0_triejs___default.a();\n      array.forEach(function (element) {\n        _this.trie.add(element);\n      });\n    },\n    handleKey: function handleKey(e) {\n      if (e.keyCode === 9) {\n        console.log(\"tab pressed\");\n\n        if (!this.saved) {\n          this.position = this.getCursorPos();\n\n          this.words = this.value.split(\" \");\n          var lcount = 0;\n          for (var i = 0; i < this.words.length; i++) {\n            var w = this.words[i];\n            lcount += w.length + 1;\n            if (lcount >= this.position) {\n              this.word = this.words[i];\n              this.wordPos = i;\n              break;\n            }\n          }\n\n          if (this.dynamicData) {\n            this.setData(this.dataSource(this.word, this.wordPos));\n          }\n\n          this.saved = true;\n          this.possible = this.trie.find(this.word);\n        } else {\n          this.index++;\n        }\n\n        if (this.possible && this.index >= this.possible.length) {\n          this.index = 0;\n        }\n\n        if (this.possible) {\n          e.preventDefault();\n          var dupe = this.words;\n          var completion = this.possible[this.index];\n          var prev = \"\";\n\n          if (dupe.length > 1) {\n            prev = dupe[this.wordPos - 1];\n          }\n\n          var res = this.format(completion, prev, this.wordPos);\n          dupe[this.wordPos] = res.word;\n          if (res.prev) dupe[this.wordPos - 1] = res.prev;\n\n          var newPos = this.words.slice(0, this.wordPos + 1).join(\" \").length;\n          this.value = dupe.join(\" \");\n        }\n      } else {\n        this.saved = false;\n        this.index = 0;\n      }\n    },\n\n    updateValue: function updateValue(value) {\n      this.$emit('input', value);\n    },\n\n    selectRange: function selectRange(start, end) {\n      this.$el.focus();\n      this.$el.setSelectionRange(start, end);\n    },\n\n    getCursorPos: function getCursorPos() {\n      return this.$el.selectionStart;\n    }\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3RhYi1jb21wbGV0ZS1pbnB1dC52dWU/NjFiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQU1BOztBQUVBO1FBRUE7d0JBQ0E7O1lBRUE7Z0JBQ0E7ZUFDQTthQUNBO2FBQ0E7WUFDQTttQkFDQTtnQkFDQTthQUVBO0FBVkE7QUFXQTs7OEJBQ0E7a0RBRUE7OzJCQUNBO3dCQUNBO0FBQ0E7QUFDQTs7O2VBSUE7QUFGQTs7OztBQUlBO1lBRUE7QUFIQTs7ZUFLQTtZQUdBO0FBSkE7QUFSQTs7O0FBY0E7O3NCQUNBO3VDQUNBO3VCQUNBO0FBQ0E7QUFDQTtxQ0FDQTsyQkFDQTtvQkFFQTs7eUJBQ0E7K0JBRUE7O3dDQUNBO3VCQUNBO3NEQUNBOytCQUNBO2lDQUNBO3lDQUNBO3FDQUNBOzZCQUNBO0FBQ0E7QUFDQTtBQUVBOztnQ0FDQTt5REFDQTtBQUVBOzt1QkFDQTs4Q0FDQTtlQUNBO2VBQ0E7QUFFQTs7aUVBQ0E7dUJBQ0E7QUFFQTs7MkJBQ0E7WUFDQTswQkFDQTs4Q0FDQTtxQkFFQTs7K0JBQ0E7dUNBQ0E7QUFFQTs7dURBQ0E7bUNBQ0E7cURBRUE7O3VFQUNBO2lDQUNBO0FBQ0E7YUFDQTtxQkFDQTtxQkFDQTtBQUNBO0FBRUE7OzZDQUNBOzBCQUNBO0FBRUE7O2tEQUNBO2VBQ0E7d0NBQ0E7QUFFQTs7MENBQ0E7c0JBQ0E7QUFFQTtBQTNFQTtBQW5DQSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxyXG4gIDxpbnB1dCB0eXBlPVwidGV4dFwiIHYtb246a2V5ZG93bj1cImhhbmRsZUtleVwiIHYtYmluZDp2YWx1ZT1cInZhbHVlXCJcclxuICAgICAgICAgdi1vbjppbnB1dD1cInVwZGF0ZVZhbHVlKCRldmVudC50YXJnZXQudmFsdWUpXCIgLz5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCBUcmllSlMgZnJvbSBcInRyaWVqc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIG5hbWU6IFwidGFiLWNvbXBsZXRlLWlucHV0XCIsXHJcbiAgZGF0YSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRyaWU6IHt9LFxyXG4gICAgICBwb3NpdGlvbjogMCxcclxuICAgICAgd29yZFBvczogMCxcclxuICAgICAgaW5kZXg6IDAsXHJcbiAgICAgIHdvcmRzOiBbXSxcclxuICAgICAgd29yZDogXCJcIixcclxuICAgICAgZHluYW1pY0RhdGE6IGZhbHNlLFxyXG4gICAgICBwb3NzaWJsZTogZmFsc2UsXHJcbiAgICAgIHNhdmVkOiBmYWxzZVxyXG4gICAgfTtcclxuICB9LFxyXG4gIGNyZWF0ZWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgdGhpcy5keW5hbWljRGF0YSA9IHRoaXMuZGF0YVNvdXJjZSBpbnN0YW5jZW9mIEZ1bmN0aW9uO1xyXG5cclxuICAgIGlmICghdGhpcy5keW5hbWljRGF0YSkge1xyXG4gICAgICB0aGlzLnNldERhdGEodGhpcy5kYXRhU291cmNlKTtcclxuICAgIH1cclxuICB9LFxyXG4gIHByb3BzOiB7XHJcbiAgICBkYXRhU291cmNlOiB7XHJcbiAgICAgIGRlZmF1bHQ6IFtdLFxyXG4gICAgfSxcclxuICAgIGZvcm1hdDoge1xyXG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiAodmFsLCBwcmV2LCBwb3MpIHsgcmV0dXJuIHt3b3JkOiB2YWwsIHByZXY6IHByZXYgfSB9LFxyXG4gICAgICB0eXBlOiBGdW5jdGlvblxyXG4gICAgfSwgXHJcbiAgICB2YWx1ZToge1xyXG4gICAgICBkZWZhdWx0OiBcIlwiLCBcclxuICAgICAgdHlwZTogU3RyaW5nXHJcbiAgICB9XHJcbiAgfSxcclxuICBtZXRob2RzOiB7XHJcbiAgICBzZXREYXRhOiBmdW5jdGlvbiAoYXJyYXkpIHtcclxuICAgICAgdGhpcy50cmllID0gbmV3IFRyaWVKUygpO1xyXG4gICAgICBhcnJheS5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgIHRoaXMudHJpZS5hZGQoZWxlbWVudCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIGhhbmRsZUtleTogZnVuY3Rpb24oZSkge1xyXG4gICAgICBpZiAoZS5rZXlDb2RlID09PSA5KSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJ0YWIgcHJlc3NlZFwiKTtcclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLnNhdmVkKSB7XHJcbiAgICAgICAgICB0aGlzLnBvc2l0aW9uID0gdGhpcy5nZXRDdXJzb3JQb3MoKTtcclxuXHJcbiAgICAgICAgICB0aGlzLndvcmRzID0gdGhpcy52YWx1ZS5zcGxpdChcIiBcIik7XHJcbiAgICAgICAgICB2YXIgbGNvdW50ID0gMDtcclxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy53b3Jkcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgdyA9IHRoaXMud29yZHNbaV07XHJcbiAgICAgICAgICAgIGxjb3VudCArPSB3Lmxlbmd0aCArIDE7XHJcbiAgICAgICAgICAgIGlmIChsY291bnQgPj0gdGhpcy5wb3NpdGlvbikge1xyXG4gICAgICAgICAgICAgIHRoaXMud29yZCA9IHRoaXMud29yZHNbaV07XHJcbiAgICAgICAgICAgICAgdGhpcy53b3JkUG9zID0gaTtcclxuICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGlmICh0aGlzLmR5bmFtaWNEYXRhKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh0aGlzLmRhdGFTb3VyY2UodGhpcy53b3JkLCB0aGlzLndvcmRQb3MpKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICB0aGlzLnNhdmVkID0gdHJ1ZTtcclxuICAgICAgICAgIHRoaXMucG9zc2libGUgPSB0aGlzLnRyaWUuZmluZCh0aGlzLndvcmQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLmluZGV4Kys7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy5wb3NzaWJsZSAmJiB0aGlzLmluZGV4ID49IHRoaXMucG9zc2libGUubGVuZ3RoKSB7XHJcbiAgICAgICAgICB0aGlzLmluZGV4ID0gMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnBvc3NpYmxlKSB7XHJcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICBsZXQgZHVwZSA9IHRoaXMud29yZHM7XHJcbiAgICAgICAgICBsZXQgY29tcGxldGlvbiA9IHRoaXMucG9zc2libGVbdGhpcy5pbmRleF07XHJcbiAgICAgICAgICBsZXQgcHJldiA9IFwiXCI7XHJcblxyXG4gICAgICAgICAgaWYgKGR1cGUubGVuZ3RoID4gMSkge1xyXG4gICAgICAgICAgICBwcmV2ID0gZHVwZVt0aGlzLndvcmRQb3MgLSAxXTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBsZXQgcmVzID0gdGhpcy5mb3JtYXQoY29tcGxldGlvbiwgcHJldiwgdGhpcy53b3JkUG9zKTtcclxuICAgICAgICAgIGR1cGVbdGhpcy53b3JkUG9zXSA9IHJlcy53b3JkO1xyXG4gICAgICAgICAgaWYgKHJlcy5wcmV2KSBkdXBlW3RoaXMud29yZFBvcyAtIDFdID0gcmVzLnByZXY7XHJcblxyXG4gICAgICAgICAgbGV0IG5ld1BvcyA9IHRoaXMud29yZHMuc2xpY2UoMCwgdGhpcy53b3JkUG9zICsgMSkuam9pbihcIiBcIikubGVuZ3RoO1xyXG4gICAgICAgICAgdGhpcy52YWx1ZSA9IGR1cGUuam9pbihcIiBcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuc2F2ZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmluZGV4ID0gMDtcclxuICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICB1cGRhdGVWYWx1ZTogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWUpXHJcbiAgICB9LCBcclxuXHJcbiAgICBzZWxlY3RSYW5nZTogZnVuY3Rpb24gKHN0YXJ0LCBlbmQpIHtcclxuICAgICAgdGhpcy4kZWwuZm9jdXMoKTtcclxuICAgICAgdGhpcy4kZWwuc2V0U2VsZWN0aW9uUmFuZ2Uoc3RhcnQsIGVuZCk7XHJcbiAgICB9LFxyXG5cclxuICAgIGdldEN1cnNvclBvczogZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLiRlbC5zZWxlY3Rpb25TdGFydDtcclxuICAgIH1cclxuICB9XHJcbn07XHJcbjwvc2NyaXB0PlxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3RhYi1jb21wbGV0ZS1pbnB1dC52dWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_tab_complete_input_vue__ = __webpack_require__(0);\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4ab21330_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_tab_complete_input_vue__ = __webpack_require__(4);\nvar normalizeComponent = __webpack_require__(2)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_tab_complete_input_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4ab21330_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_tab_complete_input_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGFiLWNvbXBsZXRlLWlucHV0LnZ1ZT8xYzJhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNxSztBQUNySztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG5vcm1hbGl6ZUNvbXBvbmVudCA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyXCIpXG4vKiBzY3JpcHQgKi9cbmV4cG9ydCAqIGZyb20gXCIhIWJhYmVsLWxvYWRlciEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL3RhYi1jb21wbGV0ZS1pbnB1dC52dWVcIlxuaW1wb3J0IF9fdnVlX3NjcmlwdF9fIGZyb20gXCIhIWJhYmVsLWxvYWRlciEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL3RhYi1jb21wbGV0ZS1pbnB1dC52dWVcIlxuLyogdGVtcGxhdGUgKi9cbmltcG9ydCBfX3Z1ZV90ZW1wbGF0ZV9fIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LTRhYjIxMzMwXFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZSxcXFwiYnVibGVcXFwiOntcXFwidHJhbnNmb3Jtc1xcXCI6e319fSEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vdGFiLWNvbXBsZXRlLWlucHV0LnZ1ZVwiXG4vKiB0ZW1wbGF0ZSBmdW5jdGlvbmFsICovXG52YXIgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fID0gZmFsc2Vcbi8qIHN0eWxlcyAqL1xudmFyIF9fdnVlX3N0eWxlc19fID0gbnVsbFxuLyogc2NvcGVJZCAqL1xudmFyIF9fdnVlX3Njb3BlSWRfXyA9IG51bGxcbi8qIG1vZHVsZUlkZW50aWZpZXIgKHNlcnZlciBvbmx5KSAqL1xudmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18gPSBudWxsXG52YXIgQ29tcG9uZW50ID0gbm9ybWFsaXplQ29tcG9uZW50KFxuICBfX3Z1ZV9zY3JpcHRfXyxcbiAgX192dWVfdGVtcGxhdGVfXyxcbiAgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fLFxuICBfX3Z1ZV9zdHlsZXNfXyxcbiAgX192dWVfc2NvcGVJZF9fLFxuICBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fXG4pXG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy90YWItY29tcGxldGUtaW5wdXQudnVlXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXIuanM/NTU0ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgX19WVUVfU1NSX0NPTlRFWFRfXyAqL1xuXG4vLyBJTVBPUlRBTlQ6IERvIE5PVCB1c2UgRVMyMDE1IGZlYXR1cmVzIGluIHRoaXMgZmlsZS5cbi8vIFRoaXMgbW9kdWxlIGlzIGEgcnVudGltZSB1dGlsaXR5IGZvciBjbGVhbmVyIGNvbXBvbmVudCBtb2R1bGUgb3V0cHV0IGFuZCB3aWxsXG4vLyBiZSBpbmNsdWRlZCBpbiB0aGUgZmluYWwgd2VicGFjayB1c2VyIGJ1bmRsZS5cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVDb21wb25lbnQgKFxuICByYXdTY3JpcHRFeHBvcnRzLFxuICBjb21waWxlZFRlbXBsYXRlLFxuICBmdW5jdGlvbmFsVGVtcGxhdGUsXG4gIGluamVjdFN0eWxlcyxcbiAgc2NvcGVJZCxcbiAgbW9kdWxlSWRlbnRpZmllciAvKiBzZXJ2ZXIgb25seSAqL1xuKSB7XG4gIHZhciBlc01vZHVsZVxuICB2YXIgc2NyaXB0RXhwb3J0cyA9IHJhd1NjcmlwdEV4cG9ydHMgPSByYXdTY3JpcHRFeHBvcnRzIHx8IHt9XG5cbiAgLy8gRVM2IG1vZHVsZXMgaW50ZXJvcFxuICB2YXIgdHlwZSA9IHR5cGVvZiByYXdTY3JpcHRFeHBvcnRzLmRlZmF1bHRcbiAgaWYgKHR5cGUgPT09ICdvYmplY3QnIHx8IHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBlc01vZHVsZSA9IHJhd1NjcmlwdEV4cG9ydHNcbiAgICBzY3JpcHRFeHBvcnRzID0gcmF3U2NyaXB0RXhwb3J0cy5kZWZhdWx0XG4gIH1cblxuICAvLyBWdWUuZXh0ZW5kIGNvbnN0cnVjdG9yIGV4cG9ydCBpbnRlcm9wXG4gIHZhciBvcHRpb25zID0gdHlwZW9mIHNjcmlwdEV4cG9ydHMgPT09ICdmdW5jdGlvbidcbiAgICA/IHNjcmlwdEV4cG9ydHMub3B0aW9uc1xuICAgIDogc2NyaXB0RXhwb3J0c1xuXG4gIC8vIHJlbmRlciBmdW5jdGlvbnNcbiAgaWYgKGNvbXBpbGVkVGVtcGxhdGUpIHtcbiAgICBvcHRpb25zLnJlbmRlciA9IGNvbXBpbGVkVGVtcGxhdGUucmVuZGVyXG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBjb21waWxlZFRlbXBsYXRlLnN0YXRpY1JlbmRlckZuc1xuICAgIG9wdGlvbnMuX2NvbXBpbGVkID0gdHJ1ZVxuICB9XG5cbiAgLy8gZnVuY3Rpb25hbCB0ZW1wbGF0ZVxuICBpZiAoZnVuY3Rpb25hbFRlbXBsYXRlKSB7XG4gICAgb3B0aW9ucy5mdW5jdGlvbmFsID0gdHJ1ZVxuICB9XG5cbiAgLy8gc2NvcGVkSWRcbiAgaWYgKHNjb3BlSWQpIHtcbiAgICBvcHRpb25zLl9zY29wZUlkID0gc2NvcGVJZFxuICB9XG5cbiAgdmFyIGhvb2tcbiAgaWYgKG1vZHVsZUlkZW50aWZpZXIpIHsgLy8gc2VydmVyIGJ1aWxkXG4gICAgaG9vayA9IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAvLyAyLjMgaW5qZWN0aW9uXG4gICAgICBjb250ZXh0ID1cbiAgICAgICAgY29udGV4dCB8fCAvLyBjYWNoZWQgY2FsbFxuICAgICAgICAodGhpcy4kdm5vZGUgJiYgdGhpcy4kdm5vZGUuc3NyQ29udGV4dCkgfHwgLy8gc3RhdGVmdWxcbiAgICAgICAgKHRoaXMucGFyZW50ICYmIHRoaXMucGFyZW50LiR2bm9kZSAmJiB0aGlzLnBhcmVudC4kdm5vZGUuc3NyQ29udGV4dCkgLy8gZnVuY3Rpb25hbFxuICAgICAgLy8gMi4yIHdpdGggcnVuSW5OZXdDb250ZXh0OiB0cnVlXG4gICAgICBpZiAoIWNvbnRleHQgJiYgdHlwZW9mIF9fVlVFX1NTUl9DT05URVhUX18gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnRleHQgPSBfX1ZVRV9TU1JfQ09OVEVYVF9fXG4gICAgICB9XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHN0eWxlc1xuICAgICAgaWYgKGluamVjdFN0eWxlcykge1xuICAgICAgICBpbmplY3RTdHlsZXMuY2FsbCh0aGlzLCBjb250ZXh0KVxuICAgICAgfVxuICAgICAgLy8gcmVnaXN0ZXIgY29tcG9uZW50IG1vZHVsZSBpZGVudGlmaWVyIGZvciBhc3luYyBjaHVuayBpbmZlcnJlbmNlXG4gICAgICBpZiAoY29udGV4dCAmJiBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cykge1xuICAgICAgICBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cy5hZGQobW9kdWxlSWRlbnRpZmllcilcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gdXNlZCBieSBzc3IgaW4gY2FzZSBjb21wb25lbnQgaXMgY2FjaGVkIGFuZCBiZWZvcmVDcmVhdGVcbiAgICAvLyBuZXZlciBnZXRzIGNhbGxlZFxuICAgIG9wdGlvbnMuX3NzclJlZ2lzdGVyID0gaG9va1xuICB9IGVsc2UgaWYgKGluamVjdFN0eWxlcykge1xuICAgIGhvb2sgPSBpbmplY3RTdHlsZXNcbiAgfVxuXG4gIGlmIChob29rKSB7XG4gICAgdmFyIGZ1bmN0aW9uYWwgPSBvcHRpb25zLmZ1bmN0aW9uYWxcbiAgICB2YXIgZXhpc3RpbmcgPSBmdW5jdGlvbmFsXG4gICAgICA/IG9wdGlvbnMucmVuZGVyXG4gICAgICA6IG9wdGlvbnMuYmVmb3JlQ3JlYXRlXG5cbiAgICBpZiAoIWZ1bmN0aW9uYWwpIHtcbiAgICAgIC8vIGluamVjdCBjb21wb25lbnQgcmVnaXN0cmF0aW9uIGFzIGJlZm9yZUNyZWF0ZSBob29rXG4gICAgICBvcHRpb25zLmJlZm9yZUNyZWF0ZSA9IGV4aXN0aW5nXG4gICAgICAgID8gW10uY29uY2F0KGV4aXN0aW5nLCBob29rKVxuICAgICAgICA6IFtob29rXVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBmb3IgdGVtcGxhdGUtb25seSBob3QtcmVsb2FkIGJlY2F1c2UgaW4gdGhhdCBjYXNlIHRoZSByZW5kZXIgZm4gZG9lc24ndFxuICAgICAgLy8gZ28gdGhyb3VnaCB0aGUgbm9ybWFsaXplclxuICAgICAgb3B0aW9ucy5faW5qZWN0U3R5bGVzID0gaG9va1xuICAgICAgLy8gcmVnaXN0ZXIgZm9yIGZ1bmN0aW9hbCBjb21wb25lbnQgaW4gdnVlIGZpbGVcbiAgICAgIG9wdGlvbnMucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyV2l0aFN0eWxlSW5qZWN0aW9uIChoLCBjb250ZXh0KSB7XG4gICAgICAgIGhvb2suY2FsbChjb250ZXh0KVxuICAgICAgICByZXR1cm4gZXhpc3RpbmcoaCwgY29udGV4dClcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGVzTW9kdWxlOiBlc01vZHVsZSxcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXIuanNcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* Copyright (C) 2012 Paul Thurlow\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy \n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in\n* all copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n(function() {\n\n  /**\n  * @decription Trie class for saving data by keywords accessible through\n  *   word prefixes\n  * @class\n  * @version 0.1.5\n  */\n  var Triejs = function(opts) {\n\n    /**\n    * @private\n    * @description Options for trie implementation\n    * @type {Object}\n    */\n    this.options = {\n    \n      /**\n      * @description Maximum number of items to cache per node\n      * @type {Number}\n      */\n      maxCache: 10\n\n      /**\n      * @description Whether to handle caching on node levels\n      * @type {Boolean}\n      */\n      , enableCache: true\n\n      /**\n      * @description Maintain insert ordering when adding to non cached trie\n      * @type {Boolean}\n      */\n      , insertOrder: false\n\n      /**\n      * @description Return responses from root when requests is empty\n      * @type {Boolean}\n      */\n      , returnRoot: false\n\n      /**\n      * @description Insert function for adding new items to cache\n      * @type {Function}\n      */\n      , insert: null\n\n      /**\n      * @description Sorting function for sorting items to cache\n      * @type {Function}\n      */\n      , sort: null\n\n      /**\n      * @description Clip function for removing old items from cache\n      * @type {Function}\n      */\n      , clip: null\n\n      /**\n      * @description copy function for copying data between nodes\n      * @type {Function}\n      */\n      , copy: null\n\n      /**\n      * @description Merge function to merge two data sets together\n      * @type {Function}\n      */\n      , merge: null\n    };\n\n    /**\n    * @private\n    * @description trie object\n    * @type {Object}\n    */\n    this.root = {};\n\n    /**\n    * @private\n    * @description insert order index\n    * @type {Number}\n    */\n    this.index = 0;\n\n    // mixin optional override options\n    for (var key in opts) {\n      if (opts.hasOwnProperty(key)) {\n        this.options[key] = opts[key];\n      }\n    };\n\n    if (typeof this.options.insert != 'function') {\n      this.options.insert = function(target, data) {\n        // if maintaining insert ordering add a order index on insert\n        if (this.options.insertOrder \n          && typeof data.d === 'undefined' \n          && typeof data.o === 'undefined') {\n          data = { d: data, o: this.index++ };\n        }\n        if (target && target.length) {\n          target.push(data);\n        } else {\n          target = [data];\n        }\n        return target;\n      };\n    }\n    if (typeof this.options.sort != 'function') {\n      if (!this.options.insertOrder) {\n        this.options.sort = function() {\n          this.sort();\n        };\n      } else if (this.options.insertOrder) {\n        this.options.sort = function() {\n          this.sort(function(a, b) { return a.o - b.o; });\n        }\n      }\n    }\n    if (typeof this.options.clip != 'function') {\n      this.options.clip = function(max) {\n        if (this.length > max) {\n          this.splice(max, this.length - max);\n        }\n      };\n    }\n    if (typeof this.options.copy != 'function') {\n      this.options.copy = function(data) {\n        return data.slice(0);\n      }\n    }\n    if (typeof this.options.merge != 'function') {\n      this.options.merge = function(target, data, word) {\n        for (var i = 0, ii = data.length; i < ii; i++) {\n          target = this.options.insert.call(this, target, data[i]);\n          this.options.sort.call(target, word);\n          this.options.clip.call(target, this.options.maxCache);\n        }\n        return target;\n      }\n    }\n  };\n\n  Triejs.prototype = {\n\n    /*-------------------------------------------------------------------------\n    * Private Functions\n    -------------------------------------------------------------------------*/\n\n    /**\n    * @description Add data to the current nodes cache\n    * @param curr {Object} current node in trie\n    * @param data {Object} Data to add to the cache\n    * @private\n    */\n    _addCacheData: function(curr, data) {\n      if ((this.root === curr && !this.options.returnRoot) \n        || this.options.enableCache === false) {\n        return false;\n      }\n      if (!curr.$d) {\n        curr.$d = {};\n      }\n      curr.$d = this.options.insert.call(this, curr.$d, data);\n      this.options.sort.call(curr.$d);\n      this.options.clip.call(curr.$d, this.options.maxCache);\n      return true;\n    }\n\n    /**\n    * @description Adds the remainder of a word to a subtree\n    * @param suffix {String} the remainder of a word\n    * @param data {Object} data to add at suffix\n    * @param curr {Object} current node in the trie\n    * @private\n    */\n    , _addSuffix: function(suffix, data, curr) {\n      var letter = suffix.charAt(0)\n        , nextSuffix = suffix.substring(1) || null\n        , opts = { $d: {} };\n      if (nextSuffix) {\n        opts.$s = nextSuffix;\n      }\n      if (typeof curr[letter] === 'undefined') {\n        curr[letter] = opts;\n      } else if (typeof curr[letter].$d === 'undefined') {\n        curr[letter].$d = {};\n        if (nextSuffix && typeof curr[letter].$s === 'undefined') {\n          curr[letter].$s = nextSuffix;\n        }\n      }\n      curr[letter].$d = this.options.insert.call(this, curr[letter].$d, data);\n      this.options.sort.call(curr[letter].$d);\n    }\n\n    /**\n    * @description Move data from current location to new suffix position\n    * @param suffix {String} the remainder of a word\n    * @param data {Object} data currently stored to be moved to suffix ending\n    * @param curr {Object} current node in the trie\n    * @private\n    */\n    , _moveSuffix: function(suffix, data, curr) {\n      var letter = suffix.charAt(0)\n        , nextSuffix = suffix.substring(1) || null\n        , opts = { $d: {} };\n      if (nextSuffix) {\n        opts.$s = nextSuffix;\n      }\n      if (typeof curr[letter] === 'undefined') {\n        curr[letter] = opts;\n      }\n      curr[letter].$d = this.options.copy(data);\n    }\n\n    /**\n    * @description Get data from a given node, either in the cache\n    *   or by parsing the subtree\n    * @param node {Object} The node to get data from\n    * @return {Array|Object} data results\n    */\n    , _getDataAtNode: function(node, word) {\n      var data;\n\n      if (this.options.enableCache) {\n        this.options.sort.call(node.$d, word);\n        data = node.$d;\n      } else {\n        data = this._getSubtree(node, word);\n      }\n      if (this.options.insertOrder) {\n        data = this._stripInsertOrder(data);\n      }\n      return data ? this.options.copy(data) : undefined;\n    }\n\n    /**\n    * @description Remove the outer data later that stores insert order\n    * @param data {Object} The data with insert order object wrapper\n    * @return {Array} data results without insert order wrapper\n    */\n    , _stripInsertOrder: function(data) {\n      if (typeof data == 'undefined') {\n        return;\n      }\n      var temp = [];\n      for (var i = 0, ii = data.length; i < ii; i++) {\n        temp.push(data[i].d);\n      }\n      return temp;\n    }\n\n    /**\n    * @description Get the subtree data of a trie traversing depth first\n    * @param curr {Object} current node in the trie to get data under\n    * @return {Object} data from the subtree\n    */\n    , _getSubtree: function(curr, word) {\n      var res\n        , nodeArray = [curr]\n        , node;\n      while (node = nodeArray.pop()) {\n        for (var newNode in node) {\n          if (node.hasOwnProperty(newNode)) {\n            if (newNode == '$d') {\n              if (typeof res == 'undefined') {\n                res = [];\n              }\n              res = this.options.merge.call(this, res, node.$d, word);\n            } else if (newNode != '$s') {\n              nodeArray.push(node[newNode]);\n            }\n          }\n        }\n      }\n      return res;\n    }\n\n    /*-------------------------------------------------------------------------\n    * Public Functions\n    -------------------------------------------------------------------------*/\n\n    /**\n    * @description Adds a word into the trie\n    * @param word {String} word to add\n    * @param data {Object} data to store under given term\n    */\n    , add: function(word, data) {\n      if (typeof word != 'string') { return false; }\n      if (arguments.length == 1) { data = word; }\n      word = word.toLowerCase();\n\n      var curr = this.root;\n\n      for (var i = 0, ii = word.length; i < ii; i++) {\n        var letter = word.charAt(i);\n        // No letter at this level\n        if (!curr[letter]) {\n          // Current level has a suffix already so push suffix lower in trie\n          if (curr.$s) {\n            if (curr.$s == word.substring(i)) {\n              // special case where word exists already, so we avoid breaking\n              // up the substring and store both at the top level\n              if (!this._addCacheData(curr, data)) {\n                curr.$d = this.options.insert.call(this, curr.$d, data);\n                this.options.sort.call(curr.$d);\n              }\n              break;\n            }\n            this._moveSuffix(curr.$s, curr.$d, curr);\n            delete curr.$s;\n            if (this.options.enableCache === false) {\n              delete curr.$d;\n            }\n          }\n          // Current level has no sub letter after building suffix\n          if (!curr[letter]) {\n            this._addSuffix(word.substring(i), data, curr);\n            this._addCacheData(curr, data);\n            break;\n          }\n          // add to the cache at the current node level in the trie\n          this._addCacheData(curr, data);\n          // if its the end of a word push possible suffixes at this node down\n          // and add data to cache at the words end\n          if (i == ii - 1) {\n            if (curr[letter].$s) {\n              this._moveSuffix(curr[letter].$s, curr[letter].$d, curr[letter]);\n              delete curr[letter].$s;\n              if (this.options.enableCache === false) {\n                delete curr[letter].$d;\n              }\n              // insert new data at current end of word node level\n              this._addSuffix(letter, data, curr);\n            } else {\n              // either add to cache or just add the data at end of word node\n              if (!this._addCacheData(curr[letter], data)) {\n                this._addSuffix(letter, data, curr);\n              }\n            }\n          }\n          curr = curr[letter];\n        }\n        // There is a letter and we are at the end of the word\n        else if (i == ii - 1) {\n          this._addCacheData(curr, data);\n          // either add to cache at the end of the word or just add the data\n          if (!this._addCacheData(curr[letter], data)) {\n            this._addSuffix(letter, data, curr);\n          }\n        }\n        // There is a letter so traverse lower into the trie\n        else {\n          this._addCacheData(curr, data);\n          curr = curr[letter];\n        }\n      }\n    }\n\n    /**\n    * @description remove a word from the trie if there is no caching\n    * @param word {String} word to remove from the trie\n    */\n    , remove: function(word) {\n      if (typeof word !== 'string' || word === '' || this.options.enableCache){\n        return;\n      }\n      word = word.toLowerCase();\n      var letter\n        , i\n        , ii\n        , curr = this.root\n        , prev\n        , prevLetter\n        , data\n        , count = 0;\n\n      for (i = 0, ii = word.length; i < ii; i++) {\n        letter = word.charAt(i);\n        if (!curr[letter]) {\n          if (curr.$s && curr.$s === word.substring(i)) {\n            break; // word is at this leaf node\n          } else {\n            return; // word not in the trie\n          }\n        } else {\n          prev = curr;\n          prevLetter = letter;\n          curr = curr[letter]\n        }\n      }\n      data = this.options.copy(curr.$d);\n      if (this.options.insertOrder) {\n        data = this._stripInsertOrder(data);\n      }\n      delete curr.$d;\n      delete curr.$s;\n      // enumerate all child nodes\n      for (var node in curr) {\n        if (curr.hasOwnProperty(node)) {\n          count++;\n        }\n      }\n      if (!count) {\n        delete prev[prevLetter]; // nothing left at this level so remove it\n      }\n      return data;\n    }\n\n    /**\n    * @description see if a word has been added to the trie\n    * @param word {String} word to search for\n    * @return {Boolean} whether word exists or not\n    */\n    , contains: function(word) {\n      if (typeof word !== 'string' || word == '') { return false; }\n      word = word.toLowerCase();\n\n      var curr = this.root;\n      for (var i = 0, ii = word.length; i < ii; i++) {\n        var letter = word.charAt(i);\n        if (!curr[letter]) {\n          if (curr.$s && curr.$s === word.substring(i)) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          curr = curr[letter];\n        }\n      }\n      return curr.$d && (typeof curr.$s === 'undefined') ? true : false;\n    }\n\n    /**\n    * @description Get the data for a given prefix of a word\n    * @param prefix {String} string of the prefix of a word\n    * @return {Object} data for the given prefix\n    */\n    , find: function(prefix) {\n      if (typeof prefix !== 'string') { return undefined; }\n      if (prefix == '' && !this.options.returnRoot) { return undefined; }\n      prefix = prefix.toLowerCase();\n\n      var curr = this.root;\n      for (var i = 0, ii = prefix.length; i < ii; i++) {\n        var letter = prefix.charAt(i);\n        if (!curr[letter]) {\n          if (curr.$s && curr.$s.indexOf(prefix.substring(i)) == 0) {\n            return this._getDataAtNode(curr, prefix);\n          } else {\n            return undefined;\n          }\n        } else {\n          curr = curr[letter];\n        }\n      }\n      return this._getDataAtNode(curr, prefix);\n    }\n  };\n\n  //Export to CommonJS/Node format\n  if (true) {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = Triejs;\n    }\n    exports.Triejs = Triejs;\n  } else if (typeof define === 'function' && define.amd) {\n    define('triejs', function() {\n      return Triejs;\n    });\n  } else {\n    // no exports so attach to global\n    this['Triejs'] = Triejs;\n  }\n})(this);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.value},on:{\"keydown\":_vm.handleKey,\"input\":function($event){_vm.updateValue($event.target.value)}}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGFiLWNvbXBsZXRlLWlucHV0LnZ1ZT9lMTk4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQixhQUFhLDBCQUEwQix3QkFBd0IsbUJBQW1CLE9BQU8sY0FBYyxXQUFXLGtCQUFrQixLQUFLLGlEQUFpRCx1Q0FBdUM7QUFDM1A7QUFDQSxpQkFBaUI7QUFDakIsa0UiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdpbnB1dCcse2F0dHJzOntcInR5cGVcIjpcInRleHRcIn0sZG9tUHJvcHM6e1widmFsdWVcIjpfdm0udmFsdWV9LG9uOntcImtleWRvd25cIjpfdm0uaGFuZGxlS2V5LFwiaW5wdXRcIjpmdW5jdGlvbigkZXZlbnQpe192bS51cGRhdGVWYWx1ZSgkZXZlbnQudGFyZ2V0LnZhbHVlKX19fSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnZhciBlc0V4cG9ydHMgPSB7IHJlbmRlcjogcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZucyB9XG5leHBvcnQgZGVmYXVsdCBlc0V4cG9ydHNcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlcj97XCJpZFwiOlwiZGF0YS12LTRhYjIxMzMwXCIsXCJoYXNTY29wZWRcIjpmYWxzZSxcImJ1YmxlXCI6e1widHJhbnNmb3Jtc1wiOnt9fX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vc3JjL3RhYi1jb21wbGV0ZS1pbnB1dC52dWVcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n");

/***/ })
/******/ ]);
});